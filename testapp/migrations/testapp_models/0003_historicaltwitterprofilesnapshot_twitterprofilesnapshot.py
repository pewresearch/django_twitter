# Generated by Django 3.0.2 on 2020-02-20 14:41

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


def populate_snapshots(apps, schema_editor):

    from django_twitter.utils import get_concrete_model
    import pandas as pd

    # During migrations, Django creates "fake" versions of the models that are accessible via apps
    # So we need to look up the models in our app, and then grab the fake migration-based versions via apps
    TwitterProfileModel, TwitterProfileSnapshotModel = None, None
    model = get_concrete_model("AbstractTwitterProfile")
    if model:
        TwitterProfileModel = apps.get_model(model._meta.app_label, model._meta.model_name)
    model = get_concrete_model("AbstractTwitterProfileSnapshot")
    if model:
        TwitterProfileSnapshotModel = apps.get_model(model._meta.app_label, model._meta.model_name)

    # If our app has both of these models, we'll transfer the data
    if TwitterProfileModel and TwitterProfileSnapshotModel:
        for profile in TwitterProfileModel.objects.exclude(json={}).exclude(json__isnull=True):
            history = pd.DataFrame.from_records(profile.history.values())
            history["json_str"] = history["json"].astype(str)
            history = history.sort_values("history_date").groupby("json_str").first().reset_index()
            for index, row in history.iterrows():
                snapshot = get_concrete_model("AbstractTwitterProfileSnapshot").objects.create(profile=profile, json=row["json"])
                snapshot.update_from_json()


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('testapp', '0002_auto_20200220_1452'),
    ]

    operations = [
        migrations.CreateModel(
            name='TwitterProfileSnapshot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('twitter_id', models.CharField(db_index=True, max_length=150)),
                ('last_update_time', models.DateTimeField(auto_now=True)),
                ('historical', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('screen_name',
                 models.CharField(db_index=True, help_text='Twitter screen name', max_length=100, null=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('contributors_enabled', models.NullBooleanField()),
                ('description', models.TextField(null=True)),
                ('favorites_count', models.IntegerField(null=True)),
                ('followers_count', models.IntegerField(null=True)),
                ('followings_count', models.IntegerField(null=True)),
                ('is_private', models.BooleanField(default=False)),
                ('is_verified', models.NullBooleanField()),
                ('listed_count', models.IntegerField(null=True)),
                ('profile_image_url', models.TextField(null=True)),
                ('status', models.TextField(null=True)),
                ('statuses_count', models.IntegerField(null=True)),
                ('urls',
                 django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=300), default=list,
                                                           size=None)),
                ('location', models.CharField(max_length=512, null=True)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(default=dict, null=True)),
                ('profile',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='snapshots',
                                   to='testapp.TwitterProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalTwitterProfileSnapshot',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('twitter_id', models.CharField(db_index=True, max_length=150)),
                ('last_update_time', models.DateTimeField(blank=True, editable=False)),
                ('historical', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(blank=True, editable=False)),
                ('screen_name',
                 models.CharField(db_index=True, help_text='Twitter screen name', max_length=100, null=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('contributors_enabled', models.NullBooleanField()),
                ('description', models.TextField(null=True)),
                ('favorites_count', models.IntegerField(null=True)),
                ('followers_count', models.IntegerField(null=True)),
                ('followings_count', models.IntegerField(null=True)),
                ('is_private', models.BooleanField(default=False)),
                ('is_verified', models.NullBooleanField()),
                ('listed_count', models.IntegerField(null=True)),
                ('profile_image_url', models.TextField(null=True)),
                ('status', models.TextField(null=True)),
                ('statuses_count', models.IntegerField(null=True)),
                ('urls',
                 django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=300), default=list,
                                                           size=None)),
                ('location', models.CharField(max_length=512, null=True)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(default=dict, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(blank=True, db_constraint=False, null=True,
                                              on_delete=django.db.models.deletion.DO_NOTHING, related_name='+',
                                              to='testapp.TwitterProfile')),
            ],
            options={
                'verbose_name': 'historical twitter profile snapshot',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.RunPython(populate_snapshots, migrations.RunPython.noop),
    ]
