# Generated by Django 2.2.6 on 2019-11-06 12:19

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [migrations.swappable_dependency(settings.AUTH_USER_MODEL)]

    operations = [
        migrations.CreateModel(
            name="Tweet",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("twitter_id", models.CharField(db_index=True, max_length=150)),
                ("last_update_time", models.DateTimeField(auto_now=True)),
                ("historical", models.BooleanField(default=False)),
                (
                    "created_at",
                    models.DateTimeField(
                        help_text="The time/date that the tweet was published",
                        null=True,
                    ),
                ),
                (
                    "links",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=400),
                        default=list,
                        help_text="Links contained in the tweet",
                        null=True,
                        size=None,
                    ),
                ),
                ("text", models.CharField(max_length=1024, null=True)),
                (
                    "profile_mentions_raw",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=280),
                        default=list,
                        null=True,
                        size=None,
                    ),
                ),
                ("language", models.CharField(max_length=255, null=True)),
                ("retweet_count", models.IntegerField(null=True)),
                ("favorite_count", models.IntegerField(null=True)),
                (
                    "json",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        default=dict, null=True
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="TwitterHashtag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=150, unique=True)),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="TwitterPlace",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("twitter_id", models.CharField(db_index=True, max_length=150)),
                ("last_update_time", models.DateTimeField(auto_now=True)),
                ("historical", models.BooleanField(default=False)),
                ("full_name", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("place_type", models.CharField(max_length=255)),
                ("country_code", models.CharField(max_length=10)),
                ("country", models.CharField(max_length=255)),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="TwitterProfile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("twitter_id", models.CharField(db_index=True, max_length=150)),
                ("last_update_time", models.DateTimeField(auto_now=True)),
                ("historical", models.BooleanField(default=False)),
                (
                    "tweet_backfilled",
                    models.BooleanField(
                        default=False,
                        help_text="An indicator used in the sync_tweets management function; True indicates that the profile's         tweet history has been backfilled as far as possible, so the sync function will stop after it hits an existing         tweet the next time it runs.",
                    ),
                ),
                (
                    "screen_name",
                    models.CharField(
                        db_index=True,
                        help_text="Twitter screen name",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("name", models.CharField(max_length=200, null=True)),
                ("description", models.TextField(null=True)),
                ("status", models.TextField(null=True)),
                (
                    "urls",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=300),
                        default=list,
                        size=None,
                    ),
                ),
                ("contributors_enabled", models.NullBooleanField()),
                ("is_verified", models.NullBooleanField()),
                ("is_private", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(null=True)),
                ("profile_image_url", models.TextField(null=True)),
                ("geo_enabled", models.NullBooleanField()),
                ("location", models.CharField(max_length=512, null=True)),
                ("language", models.CharField(max_length=255, null=True)),
                ("time_zone", models.CharField(max_length=255, null=True)),
                ("utc_offset", models.CharField(max_length=255, null=True)),
                ("favorites_count", models.IntegerField(null=True)),
                ("followers_count", models.IntegerField(null=True)),
                ("followings_count", models.IntegerField(null=True)),
                ("listed_count", models.IntegerField(null=True)),
                ("statuses_count", models.IntegerField(null=True)),
                ("twitter_error_code", models.IntegerField(null=True)),
                (
                    "json",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        default=dict, null=True
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="TwitterRelationship",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(auto_now=True)),
                ("run_id", models.IntegerField(null=True)),
                (
                    "follower",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="following_details",
                        to="django_twitter.TwitterProfile",
                    ),
                ),
                (
                    "following",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="follower_details",
                        to="django_twitter.TwitterProfile",
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="TwitterProfileSet",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=256, unique=True)),
                (
                    "profiles",
                    models.ManyToManyField(
                        related_name="twitter_profile_sets",
                        to="django_twitter.TwitterProfile",
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.AddField(
            model_name="twitterprofile",
            name="followers",
            field=models.ManyToManyField(
                related_name="followings",
                through="django_twitter.TwitterRelationship",
                to="django_twitter.TwitterProfile",
            ),
        ),
        migrations.CreateModel(
            name="TweetSet",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=256, unique=True)),
                (
                    "tweets",
                    models.ManyToManyField(
                        related_name="tweet_sets", to="django_twitter.Tweet"
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.AddField(
            model_name="tweet",
            name="hashtags",
            field=models.ManyToManyField(
                related_name="tweets", to="django_twitter.TwitterHashtag"
            ),
        ),
        migrations.AddField(
            model_name="tweet",
            name="in_reply_to_status",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="replies",
                to="django_twitter.Tweet",
            ),
        ),
        migrations.AddField(
            model_name="tweet",
            name="place",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="tweets",
                to="django_twitter.TwitterPlace",
            ),
        ),
        migrations.AddField(
            model_name="tweet",
            name="profile",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tweets",
                to="django_twitter.TwitterProfile",
            ),
        ),
        migrations.AddField(
            model_name="tweet",
            name="profile_mentions",
            field=models.ManyToManyField(
                related_name="tweet_mentions", to="django_twitter.TwitterProfile"
            ),
        ),
        migrations.AddField(
            model_name="tweet",
            name="quoted_status",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="quotes",
                to="django_twitter.Tweet",
            ),
        ),
        migrations.AddField(
            model_name="tweet",
            name="retweeted_status",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="retweets",
                to="django_twitter.Tweet",
            ),
        ),
        migrations.CreateModel(
            name="HistoricalTwitterProfile",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("twitter_id", models.CharField(db_index=True, max_length=150)),
                ("last_update_time", models.DateTimeField(blank=True, editable=False)),
                ("historical", models.BooleanField(default=False)),
                (
                    "tweet_backfilled",
                    models.BooleanField(
                        default=False,
                        help_text="An indicator used in the sync_tweets management function; True indicates that the profile's         tweet history has been backfilled as far as possible, so the sync function will stop after it hits an existing         tweet the next time it runs.",
                    ),
                ),
                (
                    "screen_name",
                    models.CharField(
                        db_index=True,
                        help_text="Twitter screen name",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("name", models.CharField(max_length=200, null=True)),
                ("description", models.TextField(null=True)),
                ("status", models.TextField(null=True)),
                (
                    "urls",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=300),
                        default=list,
                        size=None,
                    ),
                ),
                ("contributors_enabled", models.NullBooleanField()),
                ("is_verified", models.NullBooleanField()),
                ("is_private", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(null=True)),
                ("profile_image_url", models.TextField(null=True)),
                ("geo_enabled", models.NullBooleanField()),
                ("location", models.CharField(max_length=512, null=True)),
                ("language", models.CharField(max_length=255, null=True)),
                ("time_zone", models.CharField(max_length=255, null=True)),
                ("utc_offset", models.CharField(max_length=255, null=True)),
                ("favorites_count", models.IntegerField(null=True)),
                ("followers_count", models.IntegerField(null=True)),
                ("followings_count", models.IntegerField(null=True)),
                ("listed_count", models.IntegerField(null=True)),
                ("statuses_count", models.IntegerField(null=True)),
                ("twitter_error_code", models.IntegerField(null=True)),
                (
                    "json",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        default=dict, null=True
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical twitter profile",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalTweet",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("twitter_id", models.CharField(db_index=True, max_length=150)),
                ("last_update_time", models.DateTimeField(blank=True, editable=False)),
                ("historical", models.BooleanField(default=False)),
                (
                    "created_at",
                    models.DateTimeField(
                        help_text="The time/date that the tweet was published",
                        null=True,
                    ),
                ),
                (
                    "links",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=400),
                        default=list,
                        help_text="Links contained in the tweet",
                        null=True,
                        size=None,
                    ),
                ),
                ("text", models.CharField(max_length=1024, null=True)),
                (
                    "profile_mentions_raw",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=280),
                        default=list,
                        null=True,
                        size=None,
                    ),
                ),
                ("language", models.CharField(max_length=255, null=True)),
                ("retweet_count", models.IntegerField(null=True)),
                ("favorite_count", models.IntegerField(null=True)),
                (
                    "json",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        default=dict, null=True
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "in_reply_to_status",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="django_twitter.Tweet",
                    ),
                ),
                (
                    "place",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="django_twitter.TwitterPlace",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="django_twitter.TwitterProfile",
                    ),
                ),
                (
                    "quoted_status",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="django_twitter.Tweet",
                    ),
                ),
                (
                    "retweeted_status",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="django_twitter.Tweet",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical tweet",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="BotometerScore",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("api_version", models.FloatField(null=True)),
                ("error", models.CharField(max_length=100, null=True)),
                ("automation_probability_english", models.FloatField(null=True)),
                ("automation_probability_universal", models.FloatField(null=True)),
                ("content_score", models.FloatField(null=True)),
                ("friend_score", models.FloatField(null=True)),
                ("network_score", models.FloatField(null=True)),
                ("sentiment_score", models.FloatField(null=True)),
                ("temporal_score", models.FloatField(null=True)),
                ("user_score", models.FloatField(null=True)),
                ("overall_score_english", models.FloatField(null=True)),
                ("overall_score_universal", models.FloatField(null=True)),
                (
                    "json",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        default=dict, null=True
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="botometer_scores",
                        to="django_twitter.TwitterProfile",
                    ),
                ),
            ],
            options={"abstract": False},
        ),
    ]
